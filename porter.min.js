const porter=function(){const c={enci:'ence',anci:'ance',abli:'able',entli:'ent',izer:'ize',ization:'ize',ation:'ate',ator:'ate',alism:'al',aliti:'al',alli:'al',fulness:'ful',ousli:'ous',ousness:'ous',iveness:'ive',iviti:'ive',biliti:'ble',bli:'ble',logi:'log',fulli:'ful',lessli:'less'},d={tional:'tion',ational:'ate',alize:'al',icate:'ic',iciti:'ic',ical:'ic',ful:'',ness:''},f=U=>'('+U+')',g='[aeiouy]',h='[^aeiou]',j=new RegExp('bdfgmnprt'.split('').map(U=>f(U)+U+'$').join('|')),k=g+h+'.*?',l=k+g+h+'.*?',n=h+g+'[^aeiouwxY]',o='$'+g+h,p=f(n)+'|'+f(o),r=U=>{return U.replace(/('s?'?)$/,'')},t=/(ss|i)es$|(i)ed$/,u=/([^su])s$/,w=new RegExp(f(k)+'eed(ly)*$'),y=new RegExp(f(h+g+'.*')+'(ed(ly)*|ing(ly)*)$'),z=/(at|bl|iz)$/,A=new RegExp(f('.'+h)+'(y|Y)'),B=U=>{return t.test(U)?U.replace(t,'$1$2'):U.replace(u,'$1')},C=U=>{if(w.test(U))return U.replace(w,'$1ee');if(y.test(U)){if(U=U.replace(y,''),z.test(U))return U.replace(z,'$1e');if(j.test(U))return U.replace(j,'$1$2$3$4$5$6$7$8$9');if((h+'*'+n+'|'+o).test(U))return U+'e'}else return U},D=U=>{return U.replace(A,'$1i')},E=Object.keys(c).sort((U,V)=>V.length-U.length).reduce((U,V)=>U+'|'+V),F=new RegExp('(.+?)'+f(E)+'$'),G=/(.+?[cdeghkmnrt])li4/,H=U=>{const V=F.exec(U);return null===V?U.replace(G,'$1'):V[1]+c[V[2]]},I=Object.keys(d).sort((U,V)=>V.length-U.length).reduce((U,V)=>U+'|'+V),J=new RegExp(f(k)+f(I)+'$'),K=new RegExp(f(l)+'ative$'),L=U=>{const V=J.exec(U);return null===V?U.replace(K,'$1'):V[1]+d[V[2]]},M=['al','ance','ence','er','ic','able','ible','ant','ement','ment','ent','ism','ate','iti','ous','ive','ize','sion','tion'].sort((U,V)=>V.length-U.length).reduce((U,V)=>U+'|'+V),N=new RegExp(f(l)+f(M)+'$'),O=U=>{return U.replace(N,'$1')},P=new RegExp(f(f(l)+'|'+f(k+p))+'e$'),Q=new RegExp(f(l+'l')+'l$'),R=U=>{return U.replace(Q,'$1').replace(P,'$1')},S=U=>{return 2>=U.length?U:(U=U.replace(/^\'/,''),U=U.replace(/^y|[aeiouy]y/g,'Y'),U=r(U),U=B(U),U=C(U),U=D(U),U=H(U),U=L(U),U=O(U),U=R(U),U.replace(/Y/g,'y'))};return{stem_word:S,stem:U=>{return'string'==typeof U&&(U=$.trim(U).toLowerCase().replace(/(\s|[^a-z'])+/g,' ').split(' ')),U.map(S)}}}();
